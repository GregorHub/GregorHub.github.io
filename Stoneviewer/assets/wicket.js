(function(t,e){if(typeof define==="function"&&define.amd){define(function(){return e()})}else if(typeof module!=="undefined"&&typeof exports==="object"){module.exports=e()}else{t.Wkt=e()}})(this,function(){var t,e,i,s;i=this;s=function t(e){if(e instanceof s)return e;if(!(this instanceof s))return new s(e);this._wrapped=e};t=function t(e,i){return e.substring(0,i.length)===i};e=function t(e,i){return e.substring(e.length-i.length)===i};s.delimiter=" ";s.isArray=function(t){return!!(t&&t.constructor===Array)};s.trim=function(i,s){s=s||" ";while(t(i,s)){i=i.substring(1)}while(e(i,s)){i=i.substring(0,i.length-1)}return i};s.Wkt=function(t){this.delimiter=s.delimiter||" ";this.wrapVertices=true;this.regExes={typeStr:/^\s*(\w+)\s*\(\s*(.*)\s*\)\s*$/,spaces:/\s+|\+/,numeric:/-*\d+(\.*\d+)?/,comma:/\s*,\s*/,parenComma:/\)\s*,\s*\(/,coord:/-*\d+\.*\d+ -*\d+\.*\d+/,doubleParenComma:/\)\s*\)\s*,\s*\(\s*\(/,ogcTypes:/^(multi)?(point|line|polygon|box)?(string)?$/i,crudeJson:/^{.*"(type|coordinates|geometries|features)":.*}$/};this._stripWhitespaceAndParens=function(t){var e=t.trim();var i=e.replace(/^\(?(.*?)\)?$/,"$1");return i};this.components=undefined;if(t&&typeof t==="string"){this.read(t)}else if(t&&typeof t!==undefined){this.fromObject(t)}};s.Wkt.prototype.isCollection=function(){switch(this.type.slice(0,5)){case"multi":return true;case"polyg":return true;default:return false}};s.Wkt.prototype.sameCoords=function(t,e){return t.x===e.x&&t.y===e.y};s.Wkt.prototype.fromObject=function(t){var e;if(t.hasOwnProperty("type")&&t.hasOwnProperty("coordinates")){e=this.fromJson(t)}else{e=this.deconstruct.call(this,t)}this.components=e.components;this.isRectangle=e.isRectangle||false;this.type=e.type;return this};s.Wkt.prototype.toObject=function(t){var e=this.construct[this.type].call(this,t);if(typeof e==="object"&&!s.isArray(e)){e.properties=this.properties}return e};s.Wkt.prototype.toString=function(t){return this.write()};s.Wkt.prototype.fromJson=function(t){var e,i,n,r,o,p;this.type=t.type.toLowerCase();this.components=[];if(t.hasOwnProperty("geometry")){this.fromJson(t.geometry);this.properties=t.properties;return this}r=t.coordinates;if(!s.isArray(r[0])){this.components.push({x:r[0],y:r[1]})}else{for(e in r){if(r.hasOwnProperty(e)){if(!s.isArray(r[e][0])){if(this.type==="multipoint"){this.components.push([{x:r[e][0],y:r[e][1]}])}else{this.components.push({x:r[e][0],y:r[e][1]})}}else{p=[];for(i in r[e]){if(r[e].hasOwnProperty(i)){if(!s.isArray(r[e][i][0])){p.push({x:r[e][i][0],y:r[e][i][1]})}else{o=[];for(n in r[e][i]){if(r[e][i].hasOwnProperty(n)){o.push({x:r[e][i][n][0],y:r[e][i][n][1]})}}p.push(o)}}}this.components.push(p)}}}}return this};s.Wkt.prototype.toJson=function(){var t,e,i,n,r,o,p;t=this.components;e={coordinates:[],type:(function(){var t,e,i;e=this.regExes.ogcTypes.exec(this.type).slice(1);i=[];for(t in e){if(e.hasOwnProperty(t)){if(e[t]!==undefined){i.push(e[t].toLowerCase().slice(0,1).toUpperCase()+e[t].toLowerCase().slice(1))}}}return i}).call(this).join("")};if(this.type.toLowerCase()==="box"){e.type="Polygon";e.bbox=[];for(i in t){if(t.hasOwnProperty(i)){e.bbox=e.bbox.concat([t[i].x,t[i].y])}}e.coordinates=[[[t[0].x,t[0].y],[t[0].x,t[1].y],[t[1].x,t[1].y],[t[1].x,t[0].y],[t[0].x,t[0].y]]];return e}for(i in t){if(t.hasOwnProperty(i)){if(s.isArray(t[i])){p=[];for(n in t[i]){if(t[i].hasOwnProperty(n)){if(s.isArray(t[i][n])){o=[];for(r in t[i][n]){if(t[i][n].hasOwnProperty(r)){o.push([t[i][n][r].x,t[i][n][r].y])}}p.push(o)}else{if(t[i].length>1){p.push([t[i][n].x,t[i][n].y])}else{p=p.concat([t[i][n].x,t[i][n].y])}}}}e.coordinates.push(p)}else{if(t.length>1){e.coordinates.push([t[i].x,t[i].y])}else{e.coordinates=e.coordinates.concat([t[i].x,t[i].y])}}}}return e};s.Wkt.prototype.merge=function(t){var e=this.type.slice(0,5);if(this.type!==t.type){if(this.type.slice(5,this.type.length)!==t.type){throw TypeError("The input geometry types must agree or the calling this.Wkt.Wkt instance must be a multigeometry of the other")}}switch(e){case"point":this.components=[this.components.concat(t.components)];break;case"multi":this.components=this.components.concat(t.type.slice(0,5)==="multi"?t.components:[t.components]);break;default:this.components=[this.components,t.components];break}if(e!=="multi"){this.type="multi"+this.type}return this};s.Wkt.prototype.read=function(t){var e;e=this.regExes.typeStr.exec(t);if(e){this.type=e[1].toLowerCase();this.base=e[2];if(this.ingest[this.type]){this.components=this.ingest[this.type].apply(this,[this.base])}}else{if(this.regExes.crudeJson.test(t)){if(typeof JSON==="object"&&typeof JSON.parse==="function"){this.fromJson(JSON.parse(t))}else{console.log("JSON.parse() is not available; cannot parse GeoJSON strings");throw{name:"JSONError",message:"JSON.parse() is not available; cannot parse GeoJSON strings"}}}else{console.log("Invalid WKT string provided to read()");throw{name:"WKTError",message:"Invalid WKT string provided to read()"}}}return this};s.Wkt.prototype.write=function(t){var e,i,s;t=t||this.components;i=[];i.push(this.type.toUpperCase()+"(");for(e=0;e<t.length;e+=1){if(this.isCollection()&&e>0){i.push(",")}if(!this.extract[this.type]){return null}s=this.extract[this.type].apply(this,[t[e]]);if(this.isCollection()&&this.type!=="multipoint"){i.push("("+s+")")}else{i.push(s);if(e!==t.length-1&&this.type!=="multipoint"){i.push(",")}}}i.push(")");return i.join("")};s.Wkt.prototype.extract={point:function t(e){return String(e.x)+this.delimiter+String(e.y)},multipoint:function t(e){var i,s=[],n;for(i=0;i<e.length;i+=1){n=this.extract.point.apply(this,[e[i]]);if(this.wrapVertices){n="("+n+")"}s.push(n)}return s.join(",")},linestring:function t(e){return this.extract.point.apply(this,[e])},multilinestring:function t(e){var i,s=[];if(e.length){for(i=0;i<e.length;i+=1){s.push(this.extract.linestring.apply(this,[e[i]]))}}else{s.push(this.extract.point.apply(this,[e]))}return s.join(",")},polygon:function t(e){return this.extract.multilinestring.apply(this,[e])},multipolygon:function t(e){var i,s=[];for(i=0;i<e.length;i+=1){s.push("("+this.extract.polygon.apply(this,[e[i]])+")")}return s.join(",")},box:function t(e){return this.extract.linestring.apply(this,[e])},geometrycollection:function t(e){console.log("The geometrycollection WKT type is not yet supported.")}};s.Wkt.prototype.ingest={point:function t(e){var i=s.trim(e).split(this.regExes.spaces);return[{x:parseFloat(this.regExes.numeric.exec(i[0])[0]),y:parseFloat(this.regExes.numeric.exec(i[1])[0])}]},multipoint:function t(e){var i,n,r;n=[];r=s.trim(e).split(this.regExes.comma);for(i=0;i<r.length;i+=1){n.push(this.ingest.point.apply(this,[r[i]]))}return n},linestring:function t(e){var i,s,n;s=this.ingest.multipoint.apply(this,[e]);n=[];for(i=0;i<s.length;i+=1){n=n.concat(s[i])}return n},multilinestring:function t(e){var i,n,r,o;n=[];o=s.trim(e).split(this.regExes.doubleParenComma);if(o.length===1){o=s.trim(e).split(this.regExes.parenComma)}for(i=0;i<o.length;i+=1){r=this._stripWhitespaceAndParens(o[i]);n.push(this.ingest.linestring.apply(this,[r]))}return n},polygon:function t(e){var i,n,r,o,p,h;h=s.trim(e).split(this.regExes.parenComma);r=[];for(i=0;i<h.length;i+=1){p=this._stripWhitespaceAndParens(h[i]).split(this.regExes.comma);o=[];for(n=0;n<p.length;n+=1){var a=p[n].split(this.regExes.spaces);if(a.length>2){a=a.filter(function(t){return t!=""})}if(a.length===2){var c=a[0];var l=a[1];o.push({x:parseFloat(c),y:parseFloat(l)})}}r.push(o)}return r},box:function t(e){var i,s,n;s=this.ingest.multipoint.apply(this,[e]);n=[];for(i=0;i<s.length;i+=1){n=n.concat(s[i])}return n},multipolygon:function t(e){var i,n,r,o;n=[];o=s.trim(e).split(this.regExes.doubleParenComma);for(i=0;i<o.length;i+=1){r=this._stripWhitespaceAndParens(o[i]);n.push(this.ingest.polygon.apply(this,[r]))}return n},geometrycollection:function t(e){console.log("The geometrycollection WKT type is not yet supported.")}};return s});